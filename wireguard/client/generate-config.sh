#!/bin/bash

# Fun√ß√£o para carregar vari√°veis do .env
load_env() {
  local env_file=".env"
  
  if [[ ! -f "$env_file" ]]; then
    echo "‚ùå Erro: Arquivo .env n√£o encontrado na pasta atual" >&2
    echo "üìã Crie um arquivo .env com as seguintes vari√°veis:" >&2
    echo "WG_SERVER_PUBLIC_KEY=" >&2
    echo "WG_INTERFACE_ADDRESS=" >&2
    echo "WG_SERVER_ENDPOINT=" >&2
    echo "FOLDER_PREFIX=" >&2
    exit 1
  fi
  
  # Carrega vari√°veis do .env ignorando coment√°rios e linhas vazias
  export $(grep -v '^#' "$env_file" | grep -v '^$' | xargs)
  
  # Valida√ß√£o das vari√°veis obrigat√≥rias
  if [[ -z "$WG_SERVER_PUBLIC_KEY" || -z "$WG_INTERFACE_ADDRESS" || -z "$WG_SERVER_ENDPOINT" || -z "$FOLDER_PREFIX" ]]; then
    echo "‚ùå Erro: Vari√°veis obrigat√≥rias n√£o definidas no .env" >&2
    echo "üìã Certifique-se de que todas as vari√°veis est√£o preenchidas:" >&2
    echo "WG_SERVER_PUBLIC_KEY, WG_INTERFACE_ADDRESS, WG_SERVER_ENDPOINT, FOLDER_PREFIX" >&2
    exit 1
  fi
}

# Fun√ß√£o para obter endere√ßo do usu√°rio
get_user_address() {
  local address
  
  echo "üîß Configure o endere√ßo do t√∫nel WireGuard" >&2
  echo -e "\n" >&2
  
  while true; do
    read -p "üìç Digite o endere√ßo IP do t√∫nel (ex: 10.0.0.2/24): " address
    
    # Valida√ß√£o b√°sica do formato IP
    if [[ "$address" =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$ ]]; then
      echo "‚úÖ Endere√ßo v√°lido: $address" >&2
      echo "$address"
      return 0
    else
      echo "‚ùå Formato inv√°lido! Use o formato IP/CIDR (ex: 10.0.0.2/24)" >&2
      echo -e "\n" >&2
    fi
  done
}

# Fun√ß√£o para extrair √∫ltimo octeto do IP
extract_last_octet() {
  local ip="$1"
  echo "$ip" | cut -d'.' -f4 | cut -d'/' -f1
}

# Fun√ß√£o para criar pasta baseada no endere√ßo
create_folder() {
  local address="$1"
  local last_octet=$(extract_last_octet "$address")
  local folder_name="${FOLDER_PREFIX}-${last_octet}"
  
  if [[ ! -d "$folder_name" ]]; then
    mkdir -p "$folder_name"
    echo "üìÅ Pasta criada: $folder_name" >&2
  else
    echo "üìÅ Usando pasta existente: $folder_name" >&2
  fi
  
  echo "$folder_name"
}

# Fun√ß√£o para gerar nova chave privada
generate_private_key() {
  wg genkey
}

# Fun√ß√£o para gerar chave p√∫blica a partir da privada
generate_public_key() {
  local private_key="$1"
  echo "$private_key" | wg pubkey
}

# Fun√ß√£o para gerar nova configura√ß√£o WireGuard
generate_new_config() {
  local user_address="$1"
  local new_private_key
  local new_public_key
  local folder_name
  local config_file
  local private_key_file
  local public_key_file
  
  echo "üöÄ Gerando nova configura√ß√£o WireGuard..."
  echo -e "\n\n" >&2
  
  # Cria pasta baseada no endere√ßo
  folder_name=$(create_folder "$user_address")
  config_file="${folder_name}/wg-client.conf"
  private_key_file="${folder_name}/privatekey.conf"
  public_key_file="${folder_name}/publickey.conf"
  
  # Gera novas chaves
  new_private_key=$(generate_private_key)
  new_public_key=$(generate_public_key "$new_private_key")
  
  # Salva chave privada
  echo "$new_private_key" > "$private_key_file"
  
  # Salva chave p√∫blica
  echo "$new_public_key" > "$public_key_file"
  
  # Monta nova configura√ß√£o usando vari√°veis do .env
  cat << EOF > "$config_file"
[Interface]
PrivateKey = $new_private_key
Address = $user_address

[Peer]
PublicKey = $WG_SERVER_PUBLIC_KEY
Endpoint = $WG_SERVER_ENDPOINT
AllowedIPs = $WG_INTERFACE_ADDRESS
PersistentKeepalive = 25
EOF
  
  echo "‚úÖ Nova configura√ß√£o salva em: $config_file" >&2
  echo "üîë Chave privada salva em: $private_key_file" >&2
  echo "üîë Chave p√∫blica salva em: $public_key_file" >&2
  echo -e "\n\n" >&2
}



# Fun√ß√£o principal
main() {
  if ! command -v wg &> /dev/null; then
    echo "‚ùå Erro: WireGuard n√£o est√° instalado" >&2
    exit 1
  fi
  
  # Carrega vari√°veis do .env
  load_env
  
  local user_address
  user_address=$(get_user_address)
  generate_new_config "$user_address"
}


# Executa fun√ß√£o principal se script for chamado diretamente
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main "$@"
fi
